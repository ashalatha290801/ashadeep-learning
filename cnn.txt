        "#9 CNN\n",
        "import tensorflow as tf\n",
        "from tensorflow.keras.datasets import mnist\n",
        "from tensorflow.keras.models import Sequential\n",
        "from tensorflow.keras.layers import Conv2D, MaxPooling2D, Flatten, Dense, Dropout\n",
        "from tensorflow.keras.utils import to_categorical\n",
        "# Load and preprocess the dataset\n",
        "(x_train, y_train), (x_test, y_test) = mnist.load_data()\n",
        "x_train = x_train.reshape(x_train.shape[0], 28, 28, 1).astype('float32') / 255\n",
        "x_test = x_test.reshape(x_test.shape[0], 28, 28, 1).astype('float32') / 255\n",
        "y_train = to_categorical(y_train, 10)\n",
        "y_test = to_categorical(y_test, 10)\n",
        "# Build the CNN model\n",
        "model = Sequential()\n",
        "model.add(Conv2D(32, kernel_size=(3, 3), activation='relu', input_shape=(28, 28, 1)))\n",
        "model.add(MaxPooling2D(pool_size=(2, 2)))\n",
        "model.add(Conv2D(64, kernel_size=(3, 3), activation='relu'))\n",
        "model.add(MaxPooling2D(pool_size=(2, 2)))\n",
        "model.add(Flatten())\n",
        "model.add(Dense(128, activation='relu'))\n",
        "model.add(Dropout(0.5))\n",
        "model.add(Dense(10, activation='softmax'))\n",
        "model.compile(loss='categorical_crossentropy', optimizer='adam',metrics=['accuracy'])\n",
        "# Train the model\n",
        "model.fit(x_train, y_train, epochs=10,batch_size=200, verbose=2)\n",
        "# Evaluate the model\n",
        "test_loss, test_acc = model.evaluate(x_test, y_test, verbose=0)\n",
        "print(f'Test accuracy: {test_acc*100:.2f}%')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jPtRbw-Itv8N",
        "outputId": "f52b8d83-c543-4364-bbd3-2a25cbbde494"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/mnist.npz\n",
            "11490434/11490434 [==============================] - 0s 0us/step\n",
            "Epoch 1/10\n",
            "300/300 - 44s - loss: 0.3793 - accuracy: 0.8836 - 44s/epoch - 146ms/step\n",
            "Epoch 2/10\n",
            "300/300 - 42s - loss: 0.1142 - accuracy: 0.9663 - 42s/epoch - 141ms/step\n",
            "Epoch 3/10\n",
            "300/300 - 42s - loss: 0.0841 - accuracy: 0.9746 - 42s/epoch - 141ms/step\n",
            "Epoch 4/10\n",
            "300/300 - 44s - loss: 0.0694 - accuracy: 0.9789 - 44s/epoch - 147ms/step\n",
            "Epoch 5/10\n",
            "300/300 - 41s - loss: 0.0610 - accuracy: 0.9821 - 41s/epoch - 138ms/step\n",
            "Epoch 6/10\n",
            "300/300 - 42s - loss: 0.0539 - accuracy: 0.9839 - 42s/epoch - 139ms/step\n",
            "Epoch 7/10\n",
            "300/300 - 41s - loss: 0.0490 - accuracy: 0.9850 - 41s/epoch - 138ms/step\n",
            "Epoch 8/10\n",
            "300/300 - 42s - loss: 0.0444 - accuracy: 0.9865 - 42s/epoch - 139ms/step\n",
            "Epoch 9/10\n",
            "300/300 - 42s - loss: 0.0412 - accuracy: 0.9869 - 42s/epoch - 139ms/step\n",
            "Epoch 10/10\n",
            "300/300 - 41s - loss: 0.0364 - accuracy: 0.9889 - 41s/epoch - 138ms/step\n",
            "Test accuracy: 99.17%\n"
          ]
        }
      ]
    }
  ]
}
